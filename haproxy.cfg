#haproxy.cfg_delestage
#---------------------------------------------------------------------
# Global settings
#
# Documentation pas mal  : http://www.haproxy.org/download/1.1/doc/haproxy-fr.txt
# Ajout par Alexis le 22/01/2016
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    # local2.*                       /var/log/haproxy.log
    
    #log         127.0.0.1 local2 debug
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    #------------------------
    # T.MILLET 04/02/2021
    # maxconn=5000 >5x NominalLoad (870)
    #------------------------	
    maxconn     5000
    ulimit-n    65536  # Ajout par Alexis le 20/04/2016
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # turn on dynamic configuration unix socket
    stats socket /var/lib/haproxy/admin.sock mode 660 level admin

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    #option http-server-close # Test Fanch
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         50000ms
    timeout client          50000ms
    timeout server          50000ms
    timeout http-keep-alive 10s
    timeout check           10s
    #------------------------
    # T.MILLET 04/02/2021
    # maxconn=5000 >5x NominalLoad (870)
    #------------------------
    maxconn                 5000
    #log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r   

frontend rph
  bind 10.106.218.110:9080
  default_backend  pool_com
  capture request header X_UNIQ_DN_CN len 200
  capture request header REQ_TYPE len 200
  capture request header MAC len 200
  #------------------------
  # ajout J. Martinez le 20/04/2016
  # principe de delestage
  # fe_conn : number of currently established connections on the frontend
  # si on atteint 300 au max (max_conn_reached) pour le frontend (fe_conn) alors on va sur le use_backend delestage
  #------------------------
  #------------------------
  # T.MILLET 04/02/2021
  # DELESTAGE starting at 2400 = 2.5xNominalLoad(870) and 200 requests max per server
  #------------------------	
  acl max_conn_reached fe_conn gt 2400
  use_backend delestage if max_conn_reached
  default_backend pool_com


backend  pool_com
  #------------------------
  # T.MILLET 04/02/2021
  # Each server will handle 70 concurrent sessions (870/12) (defined with minconn).
  # In case there’s a surge of requests, HAProxy will automatically queue those requests.
  # If the number of queued requests exceed the fullconn 1000 limit
  # HAProxy will increase concurrency to 200 sessions per server (defined with maxconn).
  # Maximum concurrent connections is then (12x200) 2400.
  #------------------------	
  fullconn  1000
  mode http
  #-------------------------
  #ajout F. JAY le 10/11/2015  on n'a pas besoin de valorisier X_UNIQ_DN_CN en metro, on le genere avec Loadrunner
  #------------------------
  balance hdr(X_UNIQ_DN_CN)
  #option httpclose # Normalement on puet virer ca # Test Fanch
  option redispatch
  retries 3
  timeout http-request 35s
  stick store-request hdr(X_UNIQ_DN_CN)
  stick match hdr(X_UNIQ_DN_CN)
  stick-table type string len 160 size 2m expire 4m

  server 1com1 10.106.217.1:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 1com2 10.106.217.62:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 1com3 10.106.218.1:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 1com4 10.106.218.89:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 1com5 10.106.218.90:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 1com6 10.106.218.91:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 2com1 10.106.218.92:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 2com2 10.106.218.93:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 2com3 10.106.218.94:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 2com4 10.106.218.95:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 2com5 10.106.218.96:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
  server 2com6 10.106.218.97:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200

 #-------------------------
 #  delestage intelligent
 #-------------------------


backend delestage
  #------------------------
  # T.MILLET 04/02/2021
  # Each server will handle 70 concurrent sessions (870/12) (defined with minconn).
  # In case there’s a surge of requests, HAProxy will automatically queue those requests.
  # If the number of queued requests exceed the fullconn 1000 limit
  # HAProxy will increase concurrency to 200 sessions per server (defined with maxconn).
  # Maximum concurrent connections is then (12x200) 2400.
  #------------------------	
  fullconn  1000
  mode http
  #-------------------------
  #ajout F. JAY le 10/11/2015  on n'a pas besoin de valorisier X_UNIQ_DN_CN en metro, on le genere avec Loadrunner
  #------------------------
  balance hdr(X_UNIQ_DN_CN)
  #option httpclose # Normalement on puet virer ca # Test Fanch
  option redispatch
  retries 3
  timeout http-request 35s
  stick store-request hdr(X_UNIQ_DN_CN)
  stick match hdr(X_UNIQ_DN_CN)
  stick-table type string len 160 size 2m expire 4m

   server 1com1 10.106.217.138:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 1com2 10.106.217.139:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 1com3 10.106.218.219:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 1com4 10.106.218.220:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 1com5 10.106.218.221:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 1com6 10.106.218.222:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 2com1 10.106.218.223:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 2com2 10.106.218.224:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 2com3 10.106.218.225:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 2com4 10.106.218.226:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 2com5 10.106.218.227:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200
   server 2com6 10.106.218.228:9080 check inter 10s fall 3 rise 1 minconn 70 maxconn 200


#
#
listen stats
  bind 10.108.37.111:9080
  mode http
  stats enable
  stats uri /server-status
  stats refresh 30s
  stats hide-version
  stats realm Haproxy\ Statistics
##  stats auth someuser:password
#
# 
##--------------------------------------------------------------------
## not used #
##--------------------------------------------------------------------
